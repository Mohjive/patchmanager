#!/bin/bash

#
# Some constants
#

# Root
AUSMT_VAR_DIR=/var/lib/patchmanager/ausmt
PATCH_ROOT_DIR=/usr/share/patchmanager/patches

# Paths / Files
AUSMT_CONTROL_DIR=${AUSMT_VAR_DIR}/control
PATCH_DIR=${PATCH_ROOT_DIR}/${1}

AUSMT_LOG_FILE=${AUSMT_VAR_DIR}/ausmt.log
AUSMT_PACKAGES_LIST_FILE=${AUSMT_VAR_DIR}/packages
AUSMT_CACHE_FILE=${AUSMT_VAR_DIR}/packages.cache
AUSMT_PATCH_BACKUP_ROOT_DIR=${AUSMT_VAR_DIR}/patches
AUSMT_PATCH_BACKUP_DIR=${AUSMT_PATCH_BACKUP_ROOT_DIR}/${1}

# Constants
PATCH_NAME=unified_diff.patch
VERSION=ausmt-sailfishos-1

# Applications
PATCH_EXEC=/usr/bin/patch
LSDIFF_EXEC=/usr/bin/lsdiff

#
# Here starts the part where all the magic happens
#

#
# Helper functions that do all the needed heavy work
#

failure_unpatch() {
  ${PATCH_EXEC} -s -p1 -R -d /tmp/patchmanager --dry-run < ${patch_file} | tee -a $PATCH_LOG 1>&2
}

failure() {
  failure_unpatch

  echo | tee -a ${AUSMT_LOG_FILE}
  echo "*** FAILED ***" | tee -a ${AUSMT_LOG_FILE}
  echo | tee -a ${AUSMT_LOG_FILE}

  rm -f $AUSMT_CACHE_FILE >/dev/null 2>&1

  exit 1
}

success() {
  echo | tee -a ${AUSMT_LOG_FILE}
  echo "*** SUCCESS ***" | tee -a ${AUSMT_LOG_FILE}
  echo | tee -a ${AUSMT_LOG_FILE}

  rm -f $AUSMT_CACHE_FILE >/dev/null 2>&1

  exit 0
}

find_patch_file() {
  if [ -f ${AUSMT_PATCH_BACKUP_DIR}/${PATCH_NAME} ]; then
    patch_file=${AUSMT_PATCH_BACKUP_DIR}/${PATCH_NAME}
  else
    patch_file=${PATCH_DIR}/${PATCH_NAME}
  fi
}

verify_text_patch() {
  if [ -f ${patch_file} ]; then
    echo >> ${AUSMT_LOG_FILE}
    echo "----------------------------------" >> ${AUSMT_LOG_FILE}
    echo "Dry running patch" >> ${AUSMT_LOG_FILE}
    echo "----------------------------------" >> ${AUSMT_LOG_FILE}
    echo >> ${AUSMT_LOG_FILE}

    ${PATCH_EXEC} -f -R -p 1 -d /tmp/patchmanager --dry-run < ${patch_file} 2>&1 >> ${AUSMT_LOG_FILE}

    if [ ${?} -ne 0 ]; then
      patch_already_unapplied="yes"
    fi
  fi
}

remove_text_patch() {
  if [ -f ${patch_file} ]; then
    if [ "${patch_already_unapplied}" != "yes" ]; then
      echo | tee -a ${AUSMT_LOG_FILE}
      echo "----------------------------------" | tee -a ${AUSMT_LOG_FILE}
      echo "Unapplying text patch" | tee -a ${AUSMT_LOG_FILE}
      echo "----------------------------------" | tee -a ${AUSMT_LOG_FILE}
      echo | tee -a ${AUSMT_LOG_FILE}

      ${PATCH_EXEC} -R -p 1 -d /tmp/patchmanager --no-backup-if-mismatch < ${patch_file} 2>&1 >> ${AUSMT_LOG_FILE}

      if [ ${?} -ne 0 ]; then
        for file in `${LSDIFF_EXEC} --addprefix=/ --strip=1 ${patch_file}` ; do
          if [ -f ${file}.rej ]; then
            rm -f ${file}.rej
          fi
        done
      fi
    fi
  fi
}

clean_backup_patch() {
  echo >> ${AUSMT_LOG_FILE}
  echo "----------------------------------" >> ${AUSMT_LOG_FILE}
  echo "Cleaning backup patch" >> ${AUSMT_LOG_FILE}
  echo "----------------------------------" >> ${AUSMT_LOG_FILE}
  echo >> ${AUSMT_LOG_FILE}

  rm -fr ${AUSMT_PATCH_BACKUP_DIR} > /dev/null 2>&1
  echo "Removed backup" >>${AUSMT_LOG_FILE}
  echo "  backup: ${AUSMT_PATCH_BACKUP_DIR}" >>${AUSMT_LOG_FILE}
  sed -i -e /"^`basename ${PATCH_DIR}` "/d ${AUSMT_PACKAGES_LIST_FILE}
}

#
# Bunch of safety checks and required initializations
#

if [ ! -f ${AUSMT_LOG_FILE} ]; then
  echo "*** Patch Log Created by Remove $(date) ***" > ${AUSMT_LOG_FILE}
fi

find_patch_file

# mount -o rw,remount / | tee -a ${AUSMT_LOG_FILE} 1>&2

echo >> ${AUSMT_LOG_FILE}
echo "------------------------------------------------------" >> ${AUSMT_LOG_FILE}
echo "AUSMT REMOVE $(date)" >> ${AUSMT_LOG_FILE}
echo "------------------------------------------------------" >> ${AUSMT_LOG_FILE}
echo >> ${AUSMT_LOG_FILE}

echo `basename ${PATCH_DIR}` >> ${AUSMT_LOG_FILE}

if [ -f ${patch_file} ]; then
  echo "  contains text patch" >> ${AUSMT_LOG_FILE}
fi

echo >> ${AUSMT_LOG_FILE}

if [ ! -x ${PATCH_EXEC} ]; then
  echo "ERROR: Cannot find ${PATCH_EXEC}" | tee -a ${AUSMT_LOG_FILE} 1>&2
  failure
fi

if [ ! -x ${LSDIFF_EXEC} ]; then
  echo "ERROR: Cannot find ${LSDIFF_EXEC}" | tee -a ${AUSMT_LOG_FILE} 1>&2
  failure
fi

if [ ! -f ${patch_file} ]; then
  echo "ERROR: Cannot find patch file !" | tee -a ${AUSMT_LOG_FILE} 1>&2
  failure
fi

rm -f $AUSMT_CACHE_FILE >/dev/null 2>&1

#
# The main function that controls all the magic stuff
#

verify_text_patch

remove_text_patch

clean_backup_patch

success

exit 0
