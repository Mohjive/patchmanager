#!/bin/bash

#
# Some constants
#

# Root
PM_VAR_DIR=/var/lib/patchmanager3
PATCH_ROOT_DIR=/usr/share/patchmanager/patches

# Paths / Files
PATCH_DIR=${PATCH_ROOT_DIR}/${1}

PM_LOG_FILE=${PM_VAR_DIR}/patchmanager.log
PM_PATCH_BACKUP_ROOT_DIR=${PM_VAR_DIR}/patches
PM_PATCH_BACKUP_DIR=${PM_PATCH_BACKUP_ROOT_DIR}/${1}

# Constants
PATCH_NAME=unified_diff.patch

# Applications
PATCH_EXEC=/usr/bin/patch

#
# Here starts the part where all the magic happens
#

#
# Helper functions that do all the needed heavy work
#

log() {
  echo "$@" |& tee -a ${PM_LOG_FILE}
}

failure() {
  log
  log "*** FAILED ***"
  log

  exit 1
}

success() {
  log
  log "*** SUCCESS ***"
  log

  exit 0
}

find_patch_file() {
  if [ -f ${PM_PATCH_BACKUP_DIR}/${PATCH_NAME} ]; then
    patch_file=${PM_PATCH_BACKUP_DIR}/${PATCH_NAME}
  else
    patch_file=${PATCH_DIR}/${PATCH_NAME}
  fi
}

verify_text_patch() {
  if [ -f ${patch_file} ]; then
    log
    log "----------------------------------"
    log "Dry running patch"
    log "----------------------------------"
    log

    ${PATCH_EXEC} -R -p 1 -d /tmp/patchmanager --dry-run < ${patch_file} |& tee -a ${PM_LOG_FILE}
  fi
}

remove_text_patch() {
  if [ -f ${patch_file} ]; then
      log
      log "----------------------------------"
      log "Unapplying text patch"
      log "----------------------------------"
      log

      ${PATCH_EXEC} -R -p 1 -d /tmp/patchmanager --no-backup-if-mismatch < ${patch_file} |& tee -a ${PM_LOG_FILE}
    fi
  fi
}

clean_backup_patch() {
  log
  log "----------------------------------"
  log "Cleaning backup patch"
  log "----------------------------------"
  log

  rm -fr ${PM_PATCH_BACKUP_DIR} > /dev/null 2>&1
  log "Removed backup"
  log "  backup: ${PM_PATCH_BACKUP_DIR}"
}

#
# Bunch of safety checks and required initializations
#

if [ ! -f ${PM_LOG_FILE} ]; then
  log "*** Patch Log Created by Remove $(date) ***"
fi

find_patch_file

# mount -o rw,remount / | tee -a ${PM_LOG_FILE} 1>&2

log
log "------------------------------------------------------"
log "PM UNAPPLY $(date)"
log "------------------------------------------------------"
log

log $(basename ${PATCH_DIR})

if [ -f ${patch_file} ]; then
  log "  contains text patch"
fi

log

if [ ! -x ${PATCH_EXEC} ]; then
  log "ERROR: Cannot find ${PATCH_EXEC}"
  failure
fi

if [ ! -f ${patch_file} ]; then
  log "ERROR: Cannot find patch file !"
  failure
fi

#
# The main function that controls all the magic stuff
#

verify_text_patch

remove_text_patch

clean_backup_patch

success

exit 0
